-- Initial lvish-extra.cabal generated by cabal init.  For further 
-- documentation, see http://haskell.org/cabal/users-guide/

name:                lvish-extra
version:             0.1.0.0
-- synopsis:            
-- description:         
-- license:             
license:             BSD3
license-file:        LICENSE
author:              Chao-Hong Chen
maintainer:          dreamlinuxer@gmail.com
-- copyright:           
category:            Concurrency
build-type:          Simple
-- extra-source-files:  
cabal-version:       >=1.8

flag debug
  description: Activate additional debug assertions, and printed output.
--               if DEBUGLVL env var is set to 1 or higher.
  default: False
  manual: True

flag chaselev
  description: Use the Chase-Lev work-stealing deque
  default: True
  manual: True

flag getonce
  description: Ensure that continuations of get run at most once
               (by using extra synchronization)
  default: True
  manual: True

flag useopt
  description: Use optimization (O2).  This is always good for LVish.
  default: True
  manual: True

flag threaded
  description: Should the tests be threaded?  Typically yes.
  default: True
  manual: True

                     
library
  exposed-modules:     Data.LVar.AddRemoveSet
                       Data.LVar.CycGraph
                       Data.LVar.FiltSet
                       Data.LVar.LayeredSatMap
                       Data.LVar.NatArray
                       Data.LVar.NatArray.Unsafe
                       Data.LVar.MaxPosInt
                       Data.LVar.Memo
                       Data.LVar.PNCounter
                       Data.LVar.SatMap
                       --Experimental.BitArray
                       --Experimental.Monotonic
                       --Experimental.Scrap
  -- other-modules:       
  other-extensions:    ScopedTypeVariables,TypeFamilies, BangPatterns, FlexibleInstances, MagicHash, GADTs, Trustworthy, NamedFieldPuns, RankNTypes, CPP, FlexibleContexts, MultiParamTypeClasses, DataKinds, InstanceSigs, GeneralizedNewtypeDeriving
  build-depends:       base >=4.8,
                       containers >=0.5,
                       ghc-prim >=0.4,
                       deepseq >=1.4,
                       par-classes     >= 1.1 && < 2.0,
                       par-collections >= 1.1 && < 2.0,
                       tslogger >= 0.1.0.0,
                       atomic-primops >= 0.8.0,
                       deepseq >= 1.3,
                       lattices   >= 1.2,
                       vector >=0.10,
                       lvish,
                       missing-foreign,
                       thread-local-storage >= 0.1.0.2,
                       bits-atomic

  ghc-options: -rtsopts -Wall -fno-warn-orphans

  if flag(useopt)
    ghc-options: -O2

  if flag(debug)
     -- TEMP: depending on these for visualzing MemoCyc DAGs:
--     build-depends: fgl, graphviz, text
     cpp-options: -DDEBUG_LVAR
--     cpp-options: -DDEBUG_MEMO
  if flag(chaselev)
     build-depends: chaselev-deque
     cpp-options: -DCHASE_LEV
  if flag(getonce)
     cpp-options: -DGET_ONCE

  -- hs-source-dirs:      

test-suite test-lvish-extra
    type:	    exitcode-stdio-1.0
    main-is:        Main.hs
    hs-source-dirs: tests/
    other-modules:  TestHelpers,
                    ArrayTests,
                    MemoTests,
                    SatMapTests,
--                    LayeredSatMapTests,
                    MaxPosIntTests,
                    AddRemoveSetTests,
                    PNCounterTests,
                    TestHelpers2

    build-depends: lvish, lvish-extra
    build-depends: base >= 4.6 && < 4.9
                   , containers >= 0.5
                   , vector >=0.10
                   , random
    build-depends: par-classes     >= 1.1 && < 2.0,
                   par-collections >= 1.1 && < 2.0
    build-depends: tasty, tasty-hunit, tasty-th,
                   tasty-quickcheck > 0.2.4, QuickCheck,
                   HUnit, time, text, hashable
    build-depends: tslogger >= 0.1.0.0
                 
    -- For we duplicate these flag-dependent options:
    if flag(useopt)
      ghc-options: -O2
    if flag(threaded)
      ghc-options: -threaded -rtsopts -with-rtsopts=-N4

    if flag(debug)
       -- TEMP: depending on these for visualzing MemoCyc DAGs:
       -- build-depends: fgl, graphviz, text
--       cpp-options: -DDEBUG_MEMO
       cpp-options: -DDEBUG_LVAR
    if flag(chaselev)
       build-depends: chaselev-deque
       cpp-options: -DCHASE_LEV
    if flag(getonce)
       cpp-options: -DGET_ONCE

    -- Atomic-primops fails when used by template-haskell/ghci on linux:
    if impl(ghc < 7.7) && os(linux) {
      buildable: False
    }

benchmark bench-lvish-extra
    type:	    exitcode-stdio-1.0
    main-is:        Bench.hs
    hs-source-dirs: tests/

    build-depends: lvish, lvish-extra
    build-depends: base >= 4.6 && < 4.9
                   , containers >= 0.5
                   , vector >=0.10
                   , random
                   , atomic-primops >= 0.7 && < 0.9
    build-depends: par-classes     >= 1.1 && < 2.0,
                   par-collections >= 1.1 && < 2.0
    build-depends: criterion >= 1.0

    ghc-options: -Wall -fno-warn-orphans

    -- For we duplicate these flag-dependent options:
    if flag(useopt)
      ghc-options: -O2
    if flag(threaded)
      ghc-options: -threaded -rtsopts -with-rtsopts=-N4
    if flag(debug)
      cpp-options: -DDEBUG_LVAR
    if flag(chaselev)
      build-depends: chaselev-deque
      cpp-options: -DCHASE_LEV
    if flag(getonce)
      cpp-options: -DGET_ONCE
